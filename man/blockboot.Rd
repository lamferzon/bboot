% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blockboot.R
\name{blockboot}
\alias{blockboot}
\title{Block bootstrap}
\usage{
blockboot(y, N, K = 1, L, l_gen = "poisson", indexes = TRUE,
     sort = FALSE, reject = TRUE, summary = FALSE, trace = TRUE)
}
\arguments{
\item{y}{Data to re-sample.}

\item{N}{Length of each simulation. If N is less or equal to the number
of data, then repeated indexes cannot occur.}

\item{K}{Number of simulations.}

\item{L}{Mean length of the blocks.}

\item{l_gen}{Distribution of the length of the blocks. Four choices
are available: \emph{poisson}, \emph{geometric}, \emph{uniform}
or \emph{constant}.}

\item{indexes}{If it is TRUE, then \code{blockboot} returns
the indexes of the re-sampled data, otherwise their values.}

\item{sort}{If it is TRUE, then it returns simulations
whose blocks are sorted by using the first index of each block,
otherwise it keeps the original order.}

\item{reject}{Only for N greater than the number of data. If it is TRUE,
then blocks having the same first index cannot appear.}

\item{summary}{If it is TRUE, then it returns not only the
simulations but also some statistics concerning each of them.}

\item{trace}{If it is TRUE, then the chosen configuration of
the block bootstrap is printed before starting the simulations.}
}
\value{
A matrix contained the K simulations of length N or a list of 2
   if \code{summary} is TRUE: as first element the simulations, as second
   one the statistics table.
}
\description{
If data are correlated, then it is not possible to use
   a simple resampling due to its inability to replicate the
   correlation in the data. The block bootstrap tries to overcome
   this issue by resampling inside blocks of data.
}
\examples{
# default settings, N <= number of observations
idx <- blockboot(air$Temperature, 1250, 2, 3)

# user settings, N > number of observations
outputs <- blockboot(air$Temperature, 3010, 2, 3, "uniform",
                     indexes = FALSE, sort = TRUE, reject = FALSE,
                     summary = TRUE)
simulations <- outputs[[1]]
summary <- outputs[[2]]

}
